---
import SearchBox from './SearchBox.astro';
import { getEntry } from 'astro:content';

// Get navigation data from CMS
const navigationData = await getEntry('navigation', 'main');
const headerLinks = navigationData.data.header.sort((a, b) => a.order - b.order);
---

<header class="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-50" transition:persist>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center space-x-2">
          <div class="w-8 h-8 bg-gradient-to-br from-primary-500 to-accent-500 rounded-lg flex items-center justify-center">
            <span class="text-white font-bold text-sm">BP</span>
          </div>
          <span class="text-xl font-bold text-gray-900">Blicksel Picks</span>
        </a>
      </div>
      
      <!-- Desktop Navigation -->
      <nav class="hidden md:flex space-x-8">
        {headerLinks.map(link => (
          <a href={link.url} class="text-gray-700 hover:text-primary-600 font-medium transition-colors">{link.name}</a>
        ))}
      </nav>
      
      <!-- Search Box -->
      <div class="hidden md:block">
        <SearchBox />
      </div>
      
      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button type="button" class="text-gray-700 hover:text-primary-600" id="mobile-menu-btn">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
    
    <!-- Mobile menu -->
    <div class="md:hidden hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t border-gray-200">
        <div class="mb-4">
          <SearchBox />
        </div>
        {headerLinks.map(link => (
          <a href={link.url} class="block px-3 py-2 text-gray-700 hover:text-primary-600 font-medium">{link.name}</a>
        ))}
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    
    mobileMenuBtn?.addEventListener('click', () => {
      mobileMenu?.classList.toggle('hidden');
    });
    
    // Close mobile menu when clicking outside
    document.addEventListener('click', (event) => {
      if (!mobileMenuBtn?.contains(event.target) && !mobileMenu?.contains(event.target)) {
        mobileMenu?.classList.add('hidden');
      }
    });
    
    // Close mobile menu when clicking on a link
    const mobileLinks = mobileMenu?.querySelectorAll('a');
    mobileLinks?.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu?.classList.add('hidden');
      });
    });
  });
</script>